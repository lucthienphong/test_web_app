using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SweetSoft.APEM.DataAccess
{
    /// <summary>
    /// Controller class for tblCustomer
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblCustomerController
    {
        // Preload our schema..
        TblCustomer thisSchemaLoad = new TblCustomer();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblCustomerCollection FetchAll()
        {
            TblCustomerCollection coll = new TblCustomerCollection();
            Query qry = new Query(TblCustomer.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblCustomerCollection FetchByID(object CustomerID)
        {
            TblCustomerCollection coll = new TblCustomerCollection().Where("CustomerID", CustomerID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblCustomerCollection FetchByQuery(Query qry)
        {
            TblCustomerCollection coll = new TblCustomerCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object CustomerID)
        {
            return (TblCustomer.Delete(CustomerID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object CustomerID)
        {
            return (TblCustomer.Destroy(CustomerID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public TblCustomer Insert(TblCustomer obj)
        {
            obj.Save(UserName);
            return obj;
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public TblCustomer Update(TblCustomer obj)
	    {
		    TblCustomer item = new TblCustomer();
	        item.MarkOld();
	        item.IsLoaded = true;

            item.CustomerID = obj.CustomerID;

            item.Code = obj.Code;

            item.Name = obj.Name;

            item.Address = obj.Address;

            item.City = obj.City;

            item.Tel = obj.Tel;

            item.Fax = obj.Fax;

            item.PostCode = obj.PostCode;

            item.DeliveryNote = obj.DeliveryNote;

            item.DeliveryID = obj.DeliveryID;

            item.PaymentNote = obj.PaymentNote;

            item.PaymentID = obj.PaymentID;

            item.SaleRepID = obj.SaleRepID;

            item.SaleRecords = obj.SaleRecords;

            item.PackagingRequirement = obj.PackagingRequirement;

            item.TechData = obj.TechData;

            item.ForwarderName = obj.ForwarderName;

            item.ForwarderAddress = obj.ForwarderAddress;

            item.IsObsolete = obj.IsObsolete;

            item.CreatedBy = obj.CreatedBy;

            item.CreatedOn = obj.CreatedOn;

            item.ModifiedBy = obj.ModifiedBy;

            item.ModifiedOn = obj.ModifiedOn;

            item.CountryID = obj.CountryID;

            item.TaxCode = obj.TaxCode;

            item.Tin = obj.Tin;

            item.Email = obj.Email;

            item.ShortName = obj.ShortName;

            item.GroupID = obj.GroupID;

            item.SAPCode = obj.SAPCode;

            item.InternalOrderNo = obj.InternalOrderNo;

            item.IsBrand = obj.IsBrand;
				
	        item.Save(UserName);
            return item;
	    }
    }
}
