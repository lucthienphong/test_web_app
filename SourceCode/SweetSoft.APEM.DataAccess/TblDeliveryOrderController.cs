using SubSonic;
using System;
using System.ComponentModel;

// <auto-generated />
namespace SweetSoft.APEM.DataAccess
{
    /// <summary>
    /// Controller class for tblDeliveryOrder
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblDeliveryOrderController
    {
        // Preload our schema..
        private TblDeliveryOrder thisSchemaLoad = new TblDeliveryOrder();

        private string userName = String.Empty;

        protected string UserName
        {
            get
            {
                if (userName.Length == 0)
                {
                    if (System.Web.HttpContext.Current != null)
                    {
                        userName = System.Web.HttpContext.Current.User.Identity.Name;
                    }
                    else
                    {
                        userName = System.Threading.Thread.CurrentPrincipal.Identity.Name;
                    }
                }
                return userName;
            }
        }

        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblDeliveryOrderCollection FetchAll()
        {
            TblDeliveryOrderCollection coll = new TblDeliveryOrderCollection();
            Query qry = new Query(TblDeliveryOrder.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblDeliveryOrderCollection FetchByID(object JobID)
        {
            TblDeliveryOrderCollection coll = new TblDeliveryOrderCollection().Where("JobID", JobID).Load();
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblDeliveryOrderCollection FetchByQuery(Query qry)
        {
            TblDeliveryOrderCollection coll = new TblDeliveryOrderCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object JobID)
        {
            return (TblDeliveryOrder.Delete(JobID) == 1);
        }

        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object JobID)
        {
            return (TblDeliveryOrder.Destroy(JobID) == 1);
        }

        /// <summary>
        /// Inserts a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public TblDeliveryOrder Insert(TblDeliveryOrder item)
        {
            item.Save(UserName);
            return item;
        }

        /// <summary>
        /// Updates a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public TblDeliveryOrder Update(TblDeliveryOrder item)
        {
            item.MarkOld();
            item.IsLoaded = true;
            item.Save(UserName);
            return item;
        }
    }
}