using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SweetSoft.APEM.DataAccess
{
    /// <summary>
    /// Controller class for tblOrderConfirmation
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblOrderConfirmationController
    {
        // Preload our schema..
        TblOrderConfirmation thisSchemaLoad = new TblOrderConfirmation();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblOrderConfirmationCollection FetchAll()
        {
            TblOrderConfirmationCollection coll = new TblOrderConfirmationCollection();
            Query qry = new Query(TblOrderConfirmation.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblOrderConfirmationCollection FetchByID(object JobID)
        {
            TblOrderConfirmationCollection coll = new TblOrderConfirmationCollection().Where("JobID", JobID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblOrderConfirmationCollection FetchByQuery(Query qry)
        {
            TblOrderConfirmationCollection coll = new TblOrderConfirmationCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object JobID)
        {
            return (TblOrderConfirmation.Delete(JobID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object JobID)
        {
            return (TblOrderConfirmation.Destroy(JobID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public TblOrderConfirmation Insert(TblOrderConfirmation obj)
	    {
            obj.Save(UserName);
            return obj;
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public TblOrderConfirmation Update(TblOrderConfirmation obj)
	    {
		    TblOrderConfirmation item = new TblOrderConfirmation();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.JobID = obj.JobID;

            item.OCNumber = obj.OCNumber;

            item.CustomerPO1 = obj.CustomerPO1;

            item.CustomerPO2 = obj.CustomerPO2;

            item.ContactPersonID = obj.ContactPersonID;

            item.OrderDate = obj.OrderDate;

            item.TaxID = obj.TaxID;

            item.TaxPercentage = obj.TaxPercentage;

            item.CurrencyID = obj.CurrencyID;

            item.RMValue = obj.RMValue;

            item.CurrencyValue = obj.CurrencyValue;

            item.Discount = obj.Discount;

            item.Remark = obj.Remark;

            item.RemarkScreen = obj.RemarkScreen;

            item.DeliveryTerm = obj.DeliveryTerm;

            item.PaymentTerm = obj.PaymentTerm;

            item.CreatedBy = obj.CreatedBy;

            item.CreatedOn = obj.CreatedOn;

            item.ModifiedBy = obj.ModifiedBy;

            item.ModifiedOn = obj.ModifiedOn;

            item.TotalPrice = obj.TotalPrice;

            item.InvoiceCurrency = obj.InvoiceCurrency;
				
	        item.Save(UserName);
            return item;
	    }
    }
}
