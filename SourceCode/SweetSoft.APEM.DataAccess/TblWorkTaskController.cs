using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SweetSoft.APEM.DataAccess
{
    /// <summary>
    /// Controller class for tblWorkTask
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblWorkTaskController
    {
        // Preload our schema..
        TblWorkTask thisSchemaLoad = new TblWorkTask();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblWorkTaskCollection FetchAll()
        {
            TblWorkTaskCollection coll = new TblWorkTaskCollection();
            Query qry = new Query(TblWorkTask.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblWorkTaskCollection FetchByID(object Id)
        {
            TblWorkTaskCollection coll = new TblWorkTaskCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblWorkTaskCollection FetchByQuery(Query qry)
        {
            TblWorkTaskCollection coll = new TblWorkTaskCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (TblWorkTask.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (TblWorkTask.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public TblWorkTask Insert(string Name, short? DepartmentID, double? Constant1, double? Constant2, double? Constant3, double? Constant4, byte? IsPlating, byte? CurrentState, byte? ShowInWorkFlow, string CreatedBy, DateTime? CreatedOn, string ModifiedBy, DateTime? ModifiedOn)
	    {
		    TblWorkTask item = new TblWorkTask();
		    
            item.Name = Name;
            
            item.DepartmentID = DepartmentID;
            
            item.Constant1 = Constant1;
            
            item.Constant2 = Constant2;
            
            item.Constant3 = Constant3;
            
            item.Constant4 = Constant4;
            
            item.IsPlating = IsPlating;
            
            item.CurrentState = CurrentState;
            
            item.ShowInWorkFlow = ShowInWorkFlow;
            
            item.CreatedBy = CreatedBy;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedOn = ModifiedOn;
	    
		    item.Save(UserName);

            return item;
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public TblWorkTask Update(int Id, string Name, short? DepartmentID, double? Constant1, double? Constant2, double? Constant3, double? Constant4, byte? IsPlating, byte? CurrentState, byte? ShowInWorkFlow, string CreatedBy, DateTime? CreatedOn, string ModifiedBy, DateTime? ModifiedOn)
	    {
		    TblWorkTask item = new TblWorkTask();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.Name = Name;
				
			item.DepartmentID = DepartmentID;
				
			item.Constant1 = Constant1;
				
			item.Constant2 = Constant2;
				
			item.Constant3 = Constant3;
				
			item.Constant4 = Constant4;
				
			item.IsPlating = IsPlating;
				
			item.CurrentState = CurrentState;
				
			item.ShowInWorkFlow = ShowInWorkFlow;
				
			item.CreatedBy = CreatedBy;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedOn = ModifiedOn;
				
	        item.Save(UserName);

            return item;
	    }
    }
}
