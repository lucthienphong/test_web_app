using System;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Xml;
using System.Xml.Serialization;
using SubSonic;
using SubSonic.Utilities;
// <auto-generated />
namespace SweetSoft.APEM.DataAccess
{
    /// <summary>
    /// Controller class for TblJobProcessing
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblJobProcessingController
    {
        // Preload our schema..
        TblJobProcessing thisSchemaLoad = new TblJobProcessing();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
                if (userName.Length == 0)
                {
                    if (System.Web.HttpContext.Current != null)
                    {
                        userName = System.Web.HttpContext.Current.User.Identity.Name;
                    }
                    else
                    {
                        userName = System.Threading.Thread.CurrentPrincipal.Identity.Name;
                    }
                }
                return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblJobProcessingCollection FetchAll()
        {
            TblJobProcessingCollection coll = new TblJobProcessingCollection();
            Query qry = new Query(TblJobProcessing.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblJobProcessingCollection FetchByID(object Id)
        {
            TblJobProcessingCollection coll = new TblJobProcessingCollection().Where("Id", Id).Load();
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblJobProcessingCollection FetchByQuery(Query qry)
        {
            TblJobProcessingCollection coll = new TblJobProcessingCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (TblJobProcessing.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (TblJobProcessing.Destroy(Id) == 1);
        }



        /// <summary>
        /// Inserts a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public TblJobProcessing Insert(int JobID, string Description,
            string CreatedBy, DateTime? CreatedOn,
            string FinishedBy, DateTime? FinishedOn, int? DepartmentID
            , string JobStatus)
        {
            TblJobProcessing item = new TblJobProcessing();

            item.Description = Description;

            item.JobID = JobID;

            item.CreatedBy = CreatedBy;

            item.CreatedOn = CreatedOn;

            item.FinishedBy = FinishedBy;

            item.FinishedOn = FinishedOn;

            item.DepartmentID = DepartmentID;

            item.JobStatus = JobStatus;

            item.Save(UserName);

            return item;
        }

        /// <summary>
        /// Updates a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public TblJobProcessing Update(int Id, int JobID,
            string Description,
            string CreatedBy, DateTime? CreatedOn,
            string FinishedBy, DateTime? FinishedOn, int? DepartmentID, string JobStatus)
        {
            TblJobProcessing item = new TblJobProcessing();

            item.MarkOld();
            item.IsLoaded = true;

            item.Id = Id;

            item.Description = Description;

            item.JobID = JobID;

            item.CreatedBy = CreatedBy;

            item.CreatedOn = CreatedOn;

            item.FinishedBy = FinishedBy;

            item.FinishedOn = FinishedOn;

            item.DepartmentID = DepartmentID;

            item.JobStatus = JobStatus;

            item.Save(UserName);

            return item;
        }
    }
}
