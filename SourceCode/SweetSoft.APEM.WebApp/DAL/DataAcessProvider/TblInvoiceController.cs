using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SweetSoft.APEM.DataAccess
{
    /// <summary>
    /// Controller class for tblInvoice
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblInvoiceController
    {
        // Preload our schema..
        TblInvoice thisSchemaLoad = new TblInvoice();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblInvoiceCollection FetchAll()
        {
            TblInvoiceCollection coll = new TblInvoiceCollection();
            Query qry = new Query(TblInvoice.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblInvoiceCollection FetchByID(object InvoiceID)
        {
            TblInvoiceCollection coll = new TblInvoiceCollection().Where("InvoiceID", InvoiceID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblInvoiceCollection FetchByQuery(Query qry)
        {
            TblInvoiceCollection coll = new TblInvoiceCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object InvoiceID)
        {
            return (TblInvoice.Delete(InvoiceID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object InvoiceID)
        {
            return (TblInvoice.Destroy(InvoiceID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string InvoiceNo,DateTime InvoiceDate,int CustomerID,int ContactID,string PONumber,short CurrencyID,decimal? RMValue,decimal? CurrencyValue,short? TaxID,int? IrisQty,decimal? IrisPrice,string Remark,string RemarkScreen,string PaymentTern,decimal? TotalPrice,decimal? NetTotal,string CreatedBy,DateTime? CreatedOn,string ModifiedBy,DateTime? ModifiedOn)
	    {
		    TblInvoice item = new TblInvoice();
		    
            item.InvoiceNo = InvoiceNo;
            
            item.InvoiceDate = InvoiceDate;
            
            item.CustomerID = CustomerID;
            
            item.ContactID = ContactID;
            
            item.PONumber = PONumber;
            
            item.CurrencyID = CurrencyID;
            
            item.RMValue = RMValue;
            
            item.CurrencyValue = CurrencyValue;
            
            item.TaxID = TaxID;
            
            item.IrisQty = IrisQty;
            
            item.IrisPrice = IrisPrice;
            
            item.Remark = Remark;
            
            item.RemarkScreen = RemarkScreen;
            
            item.PaymentTern = PaymentTern;
            
            item.TotalPrice = TotalPrice;
            
            item.NetTotal = NetTotal;
            
            item.CreatedBy = CreatedBy;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedOn = ModifiedOn;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int InvoiceID,string InvoiceNo,DateTime InvoiceDate,int CustomerID,int ContactID,string PONumber,short CurrencyID,decimal? RMValue,decimal? CurrencyValue,short? TaxID,int? IrisQty,decimal? IrisPrice,string Remark,string RemarkScreen,string PaymentTern,decimal? TotalPrice,decimal? NetTotal,string CreatedBy,DateTime? CreatedOn,string ModifiedBy,DateTime? ModifiedOn)
	    {
		    TblInvoice item = new TblInvoice();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.InvoiceID = InvoiceID;
				
			item.InvoiceNo = InvoiceNo;
				
			item.InvoiceDate = InvoiceDate;
				
			item.CustomerID = CustomerID;
				
			item.ContactID = ContactID;
				
			item.PONumber = PONumber;
				
			item.CurrencyID = CurrencyID;
				
			item.RMValue = RMValue;
				
			item.CurrencyValue = CurrencyValue;
				
			item.TaxID = TaxID;
				
			item.IrisQty = IrisQty;
				
			item.IrisPrice = IrisPrice;
				
			item.Remark = Remark;
				
			item.RemarkScreen = RemarkScreen;
				
			item.PaymentTern = PaymentTern;
				
			item.TotalPrice = TotalPrice;
				
			item.NetTotal = NetTotal;
				
			item.CreatedBy = CreatedBy;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedOn = ModifiedOn;
				
	        item.Save(UserName);
	    }
    }
}
